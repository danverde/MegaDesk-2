<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAASlQTFRF////
        fVw+VTMjm3daPSUbc4O/+86dr7a767oW7YoZsCchg5WUSB4A0crHUjAhe1o7d1Y6mHhel3BRUCsYVzww
        TzgviXZt1ce90MC1d1Mxw7Wr/9Si78pl67kEupNw7KMYTycRnJiYon5bqoVljWtL8admakkykHBUdlEu
        qwAAe1lCYEQvuMDdqpeI/v32cUsk8e7rSiciZ3m77dfXnD83w5osxHkt7YYARRcA57yPkmlGmoJui5yb
        zqZ8qbLWrRYM6uPf05eVjZrKvMLGtKOWvFNQ8MSVPgQAn6ysnod14eXl3dbQa0EQrJ+a2dzsW2+2zdPT
        7/D34be2xW1rtDUw7Nrd7ZtWyXt59LBzfo3Eys/neYqvgZKamC8lx8C+x4xbxIosxqVadFtRjyOaUQAA
        CJxJREFUeF7tnHtf1EYUhhep2oKwC73AYr1UURapZQttRfGyCiripWhrbW2lrd//Q3SyeTNzTjIJ2Ww2
        yZnO8w/kJGTnzcx7Tk6yP1oej8fj8Xg8Hsd5hZ/Ocn/r9Lev8buTKIGnt7buu6sxEBiw9cjRxRoJVKjF
        iqBLEIEKBxcrFxjg2mK9D10Utxbr68QcBji1WB9BVBx3Fusr6yQGOLNY/4AgC2qx4iDRvE+dRCXRhVk8
        OoAaCw4IPDyYnZ39E3oSyBc41Dc7+xcExZEvMNSnsOca8QKPIE9hnUTxAvUEBkAURbrA/l1oC0nmGukC
        D6Es5OCoBV0apwTu9VUk1mG4JPAg0BfvMBwSePcQMdZhiE8yUKc4i5CCdBjSBbagTnGEyBBd9cULNHVQ
        r9AhUYchXqC5k+ECWygY4gWaNRoXGBYM+QL1GmUeHBIUjFoFfmcHe3OiCwXJoppHNc/gtVuaSxc0X2Nv
        TqK70bvYZrz6ud4leu3WZxGXPo0YUaGewoQJh7zHz5ooQ2Hkwj1sN4BtzdvfIE9RVKGeQmw3gO11zUwJ
        c3gWAhs0he8ezIAHD38fXyEENmgKW1rgzPpg/DmMFqmtUtTEm3Xom5l5XEKmiRZp2BE2gseQp6bwTQkK
        UQyttbAeBmYK18uoFqHAJuWZhybP/FKCwsiG9mpfC79Cn5rC7RIURn0TNhvAtlmkM2pzbIV7jVNIi6Ha
        HFshbtkOsNkASDF8qzbHVohU2pxqyIqhYmyFocAGpVJWDBXOKeyTYji8CSlB4V2F5fFFTfBiqBhT4eHR
        2ZC9ptRDXgwVYyk8hLyQRkxjrBgqxlG4B2maBsxjrBgqiivsQxal/mkkeSYohorCCm0ClR2xty7ixVBR
        WCEkxal5FuPFUFFUYcKDEbU2wrwzDCmokGdRBo6oBVIM3yFUVCHU2KgzoUKeAsVQUUxhxhTWmWySxVBR
        TGF0J2MFx9RAshgqiimEFjv1LdNYZxgyAYW1FQxLMVS4pPCxnkNdDBVU4QUITCjsz3GOv8niJY6qmuMP
        P0R8OEZM8fdPmn9+1PyLvXPD+v1y51yMy5ngoMqZNyASMP+9Few9t/Oy1TreOeUyO8etj/P43U3mP7bw
        m7v8D+Zw7il+d5L5p3Mq1ZzaUVxGmioETlc+OH8hLgeyTh2HBXEw6O93O4XZ+HJSbOATCtDdD2QN9YWs
        dKcKs/HJpNjAJxSguwJlEV5hFl5hcbzCDHIqbMdBnFO1QozFgDgjl8JOZ/oKZ7rTwT5KtQpzjiqPws6V
        M+fjnLliOVmlCvOOKofC9ur5M0nOrybXRJUKc48qh8LOPfw5517yclWpMPeo8ii8jb/m3E4qvP7FpLiO
        TzDkHlWpc3h9Urfe8xaFJc7hVG4fVqkwzYfYbcijsDP9BLnK8GQxOYWVKrSPajp52fMonGp3plY5Ux1b
        da1UYd5R5VKowE1DBKIxqlWowGgiEOXkVZiLyhXmwSscCa+wMF5hFl7hSHiFhSlXYQ/lswATVIhPKEAv
        rnB5baEwNyam8AY+oQBry1AWsbw4XZgJKsQnFGDRKxwFr7AwXmEWXuFIeIWF8QqzKFfh55Ni8govxkGc
        s/vVpNjFJ3AwFgPijFwKL1re8ljOtriEc5TP0hijyqHwqvXp8lXsNSTOVR5ljspyLvsbgtvYa6hWof3N
        zD3sNeRQuJbylmcN+zWVKiw+qtxzmONqlUeZo7Kcy30fTl+1vOVJnqpihYVHZTuXOlscxBkVKyw6Kvu5
        clG5wlx4haPgFY6BV5iBVzgKXuEYeIUZJBXeWQQ4IgLRDO5MUKEeVToYZwSiyVENlsDy6hplAeEsBjhH
        +ehRZbCAkYasLiOcPqrBJl7ADeneRLi53OxirEM2T77cSz28RB3Sm9wzmLIYecD77HV3r0H/LzGFPlPY
        3Uc4nV36NbH2FKJNRo3S0N5FNB02hQJsGBgRox3SRTQVPucCbJgw4km+es4O32y+DdWkbGK0Q3rPEU6D
        fa+mvYZos1mjRkx8jyYOW9QibDjqmBfo9RBhw5gR2wuIpsHykoBqGBCriIimwFwrohoGsIp4Qnaco5dD
        iA1jRuzNIWqHpVIhNowZ8YRk+myE+W4O3FvPELVDV7SQahhAK+IJ2UNgNQzgFRFBKwM63WJsGDNiZhPM
        j5Riw5gRM2eGtr9iqmEAzR+ZTTBtfwXZkBsxswmml0KQDbm9shYfW86CbJh/5LT9FVQNA2hFzGiC6T2b
        KBtyI2bct9HDRNmQGzFjcmj7K8qG3IgZTTARKKoaBtAy0EYsAb0OwmzIHZa6/mgqFWZDbsTUZEpTqZBH
        NAb6sCY1mZL2V5wNmRHbaRYjVVOcDZkRU+9WSKIRZ0NuxE3EYgzoIdJsyCtBz94Ek4vQXkVMEuT/yqQs
        QdL+CrQhM2JKE0zaX4E25GvQ3gSTdCuuGgaQimgvdice0HhOmiJyzybShsyI1vu2ZbJfog2ZEbu2b6KR
        KyCwGgaQimhNpqb9FfaIxmBuO61NMLkAMm3IlyFCBDLFQm3IjGgxGkmlIqthACl4lmRq2l+h1TDAVERL
        E3zT7JRqQ2pESxNs8pBYG1IjWuqB+GoYQCsiQhrz9ldsNQwwKzHxJth8kUawDakRE1+rMe2vYBtSIybu
        28yTRME2pEZMfK1GVxLB1TBA/zfTuA5zNyDahsyIfC2aJ4mibUiNGHuiaNpf0TakRuzxJlinUtHVMEA/
        NY0lU/0kUbgNiRFjTxR1KhVuQ2JEnkzN6hVuw1Qpuv0VXg0DzHKkTbBuf8XbkBiRNcE6Kt6GxIhstnTT
        IfYRjUHfnrHCpzOsfBsSI5ImWLe/DtiQWI40wbr9dcCGxIhEjU6l4qthgK6IJJlG7a/I1/dJIiOSJjhK
        pU7Y0BiRJNMXve6QTRdsqIy4GcrpvUCg1V9ZDllxwYbu6fF4PB6Px+Nxn1brPzfzLYnxbYEZAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>